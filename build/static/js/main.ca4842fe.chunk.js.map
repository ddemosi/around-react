{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/Api.js","utils/utils.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmDeletePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg","images/edit-pencil.svg"],"names":["Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","cardOwnerId","_id","isLiked","cardLikes","some","i","onClick","handleDeleteClick","cardId","handleCardClick","cardLink","cardName","style","backgroundImage","onCardLike","length","Main","avatar","editPencil","handleEditAvatarClick","name","handleEditProfileClick","about","handleAddCardClick","cards","map","card","key","id","ownerId","link","likes","handleCardLike","Footer","ImagePopup","isOpen","onClose","api","endpoint","this","_apiEndpoint","url","_auth","headers","res","ok","json","Promise","reject","status","fetch","then","_checkResponse","data","method","body","JSON","stringify","cardID","likeStatus","authorization","PopupWithForm","onSubmit","type","title","children","EditProfilePopup","useState","setName","description","setDescription","nameRef","createRef","aboutRef","useEffect","e","preventDefault","current","value","onUpdateUser","ref","onChange","handleNameChange","target","placeholder","defaultValue","minLength","maxLength","required","handleDescriptionChange","isSaving","EditAvatarPopup","linkRef","onUpdateAvatar","AddPlacePopup","titleRef","onAddPlace","ConfirmDeletePopup","onCardDelete","confirmDeleteId","App","setCurrentInfo","editAvatarIsOpen","toggleEditAvatar","editProfileIsOpen","toggleEditProfile","addCardIsOpen","toggleAddCard","confirmDeleteIsOpen","toggleConfirmDelete","setConfirmDeleteId","selectedCard","setSelectedCard","toggleSaveText","setCards","changeProfileInfo","getCurrentUserInfo","getUserInfo","catch","err","console","log","closeAllPopups","currentTarget","getCardList","owner","Provider","changeLikeCardStatus","newCard","newCards","c","updateAvatar","addCard","deleteCard","filteredCards","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"6OAWeA,MARf,WACI,OACI,4BAAQC,UAAU,gBACd,yBAAKA,UAAU,OAAOC,IAAKC,IAAMC,IAAI,yB,gBCJpCC,EAAqBC,IAAMC,gBC4CzBC,MA3Cf,SAAcC,GAGV,IAAMC,EAAcC,qBAAWN,GAEzBO,EAAQH,EAAMI,cAAgBH,EAAYI,IAK1CC,EAAUN,EAAMO,UAAUC,MAAK,SAAAC,GAAC,OAAIA,EAAEJ,MAAQJ,EAAYI,OAgBhE,OAEI,wBAAIb,UAAU,WACV,4BAAQA,UAAS,0BAAqBW,EAAQ,0BAA2B,IAAMO,QAPvF,WACIV,EAAMW,kBAAkBX,EAAMY,WAO1B,yBAAKpB,UAAU,iBAAiBkB,QAlBxC,WACIV,EAAMa,gBAAgBb,EAAMc,SAAUd,EAAMe,WAiBkBC,MAAO,CAAEC,gBAAgB,OAAD,OAASjB,EAAMc,SAAf,QAElF,yBAAKtB,UAAU,4BACX,wBAAIA,UAAU,kBAAkBQ,EAAMe,UACtC,yBAAKvB,UAAU,2BACX,4BAAQA,UAAS,+BAA0Bc,EA3B9B,8BA2BkE,IAAMI,QAlBrG,WACIV,EAAMkB,WAAWlB,EAAMO,UAAWP,EAAMY,WAkB5B,uBAAGpB,UAAU,yBAAyBQ,EAAMO,UAAUY,YCK3DC,MAtCf,SAAcpB,GAEV,IAAMC,EAAcC,qBAAWN,GAE/B,OACI,0BAAMJ,UAAU,QACZ,6BAASA,UAAU,iBACf,yBAAKA,UAAU,6BACX,yBAAKA,UAAU,kBAAkBC,IAAKQ,EAAYoB,OAAQ1B,IAAI,iBAC9D,yBAAKH,UAAU,oBACX,yBAAKA,UAAU,yBAAyBC,IAAK6B,IAAY3B,IAAI,SAASe,QAASV,EAAMuB,0BAI7F,yBAAK/B,UAAU,2BACX,wBAAIA,UAAU,iBAAiBS,EAAYuB,MAC3C,4BAAQhC,UAAU,uBAAuBkB,QAASV,EAAMyB,yBACxD,uBAAGjC,UAAU,qBAAqBS,EAAYyB,QAGlD,4BAAQlC,UAAU,wCAAwCkB,QAASV,EAAM2B,sBAG7E,6BAASnC,UAAU,kBACf,wBAAIA,UAAU,4BAENQ,EAAM4B,MAAMC,KAAI,SAACC,GACb,OAAO,kBAAC,EAAD,CAAMC,IAAKD,EAAKE,GAAIjB,SAAUe,EAAKN,KAAMZ,OAAQkB,EAAKE,GAAI5B,YAAa0B,EAAKG,QAASnB,SAAUgB,EAAKI,KAAM3B,UAAWuB,EAAKK,MACjIjB,WAAYlB,EAAMoC,eAAgBzB,kBAAmBX,EAAMW,kBAAmBE,gBAAiBb,EAAMa,yBCvBlHwB,MARf,WACI,OACI,4BAAQ7C,UAAU,gBACd,uBAAGA,UAAU,qBAAb,4BCSG8C,MAbf,SAAoBtC,GAChB,OAEI,6BAASR,UAAS,sBAAiBQ,EAAMuC,OAAS,sBAAwB,KAClE,yBAAK/C,UAAU,2BACX,4BAAQA,UAAU,gCAAgCkB,QAASV,EAAMwC,UACjE,yBAAKhD,UAAU,qBAAqBC,IAAKO,EAAMkC,KAAMvC,IAAKK,EAAMwB,OAC/D,uBAAGhC,UAAU,yBAAyBQ,EAAMwB,S,gBC6E3DiB,EAAM,I,WAnFV,WAAYC,GAAW,oBACrBC,KAAKC,aAAeF,EAASG,IAC7BF,KAAKG,MAAQJ,EAASK,Q,2DAGTC,GACb,OAAQA,EAAIC,GAAKD,EAAIE,OAASC,QAAQC,OAAR,iBAAyBJ,EAAIK,W,oCAE9C,IAAD,OACV,OAAOC,MAAM,GAAD,OAAIX,KAAKC,aAAT,aAAkC,CAC9CG,QAASJ,KAAKG,QAEbS,MAAM,SAACP,GACN,OAAO,EAAKQ,eAAeR,Q,oCAGlB,IAAD,OACZ,OAAOM,MAAM,GAAD,OAAIX,KAAKC,aAAT,UAA+B,CACzCG,QAASJ,KAAKG,QAEfS,MAAO,SAAAP,GAAG,OAAI,EAAKQ,eAAeR,Q,wCAGnBS,GAAO,IAAD,OACtB,OAAOH,MAAM,GAAD,OAAIX,KAAKC,aAAT,aAAkC,CAC5Cc,OAAQ,QACRX,QAASJ,KAAKG,MACda,KAAMC,KAAKC,UAAU,CACnBrC,KAAMiC,EAAKjC,KACXE,MAAO+B,EAAK/B,UAGf6B,MAAO,SAAAP,GAAG,OAAI,EAAKQ,eAAeR,Q,8BAG7BS,GAAO,IAAD,OACZ,OAAOH,MAAM,GAAD,OAAIX,KAAKC,aAAT,UAA+B,CACzCc,OAAQ,OACRX,QAASJ,KAAKG,MACda,KAAMC,KAAKC,UAAU,CACnBrC,KAAMiC,EAAKjC,KACXU,KAAMuB,EAAKvB,SAGdqB,MAAO,SAAAP,GAAG,OAAI,EAAKQ,eAAeR,Q,iCAG1Bc,GAAS,IAAD,OACjB,OAAOR,MAAM,GAAD,OAAIX,KAAKC,aAAT,kBAA+BkB,GAAU,CACnDJ,OAAQ,SACRX,QAASJ,KAAKG,QAEfS,MAAO,SAAAP,GAAG,OAAI,EAAKQ,eAAeR,Q,2CAGhBc,EAAQC,GAAa,IAAD,OACvC,OAAkB,IAAfA,EACMT,MAAM,GAAD,OAAIX,KAAKC,aAAT,wBAAqCkB,GAAU,CACzDJ,OAAQ,MACRX,QAASJ,KAAKG,QAEfS,MAAO,SAAAP,GAAG,OAAI,EAAKQ,eAAeR,MAE5BM,MAAM,GAAD,OAAIX,KAAKC,aAAT,wBAAqCkB,GAAU,CACzDJ,OAAQ,SACRX,QAASJ,KAAKG,QAEfS,MAAO,SAAAP,GAAG,OAAI,EAAKQ,eAAeR,Q,mCAI1BH,GAAM,IAAD,OAChB,OAAOS,MAAM,GAAD,OAAIX,KAAKC,aAAT,oBAAyC,CACnDc,OAAQ,QACRX,QAASJ,KAAKG,MACda,KAAMC,KAAKC,UAAU,CACnBxC,OAAQwB,MAGXU,MAAO,SAAAP,GAAG,OAAI,EAAKQ,eAAeR,U,KAI3B,CC5DS,CACjBH,IAAK,6CACLE,QAAS,CACPiB,cAAe,uCAChB,eAAgB,sBCfNC,MAbf,SAAuBjE,GAInB,OACQ,0BAAMwB,KAAMxB,EAAMwB,KAAM0C,SAAUlE,EAAMkE,SAAU1E,UAAS,oBAAeQ,EAAMwB,KAArB,YAA6BxB,EAAMuC,OAAS,eAAiB,KAChH,4BAAQ/C,UAAS,4CAAuCQ,EAAMwB,MAAQd,QAASV,EAAMwC,QAAS2B,KAAK,UACnG,uBAAG3E,UAAU,0BAA0BQ,EAAMoE,OAC5CpE,EAAMqE,WC2CZC,MAjDf,SAA0BtE,GAGtB,IAAMC,EAAcC,qBAAWN,GAHF,EAKL2E,mBAAS,IALJ,mBAKtB/C,EALsB,KAKhBgD,EALgB,OAMSD,mBAAS,IANlB,mBAMtBE,EANsB,KAMTC,EANS,KAQvBC,EAAU9E,IAAM+E,YAChBC,EAAWhF,IAAM+E,YAyBvB,OAvBAE,qBAAU,WACNN,EAAQvE,EAAYuB,MACpBkD,EAAezE,EAAYyB,SAC5B,CAACzB,IAqBA,kBAAC,EAAD,CAAeiE,SAXnB,SAAsBa,GAClBA,EAAEC,iBACF,IAAMxD,EAAOmD,EAAQM,QAAQC,MACvBT,EAAcI,EAASI,QAAQC,MAErClF,EAAMmF,aAAa3D,EAAMiD,GACzBD,EAAQvE,EAAYuB,MACpBkD,EAAezE,EAAYyB,QAIYF,KAAM,eAAgB4C,MAAO,eAAgB7B,OAAQvC,EAAMuC,OAAQC,QAASxC,EAAMwC,SACzH,yBAAKhD,UAAU,uCACP,2BAAO4F,IAAKT,EAASU,SArBjC,SAAsBN,GAClB/E,EAAMsF,iBAAiBP,EAAEQ,OAAOL,QAoBqBlD,GAAG,eAAexC,UAAU,gDAAgDgG,YAAY,OAAOrB,KAAK,OAAOsB,aAAcjE,EAAMkE,UAAU,IAAIC,UAAU,KAAKC,UAAQ,IACjN,0BAAM5D,GAAG,qBAAqBxC,UAAU,iBAE5C,yBAAKA,UAAU,uCACX,2BAAO4F,IAAKP,EAAUQ,SArBlC,SAA6BN,GACzB/E,EAAM6F,wBAAwBd,EAAEQ,OAAOL,QAoBsBlD,GAAG,gBAAgBxC,UAAU,iDAAiDgG,YAAY,WAAWrB,KAAK,OAAOsB,aAAchB,EAAaiB,UAAU,IAAIC,UAAU,MAAMC,UAAQ,IACvO,0BAAM5D,GAAG,sBAAsBxC,UAAU,iBAE7C,4BAAQ2E,KAAK,SAAS3E,UAAU,0DAA0DQ,EAAM8F,SAAW,YAAc,UChBtHC,MA5Bf,SAAyB/F,GAGrB,IAAMC,EAAcC,qBAAWN,GAEzBoG,EAAUnG,IAAM+E,YAWtB,OACI,kBAAC,EAAD,CAAepD,KAAM,gBAAiB4C,MAAO,cAAeF,SAVhE,SAAkBa,GACdA,EAAEC,iBACF,IAAM9C,EAAO8D,EAAQf,QAAQC,MAE7BlF,EAAMiG,eAAe/D,IAM2DK,OAAQvC,EAAMuC,OAAQC,QAASxC,EAAMwC,SACrH,yBAAKhD,UAAU,uCACP,2BAAO4F,IAAKY,EAAShE,GAAG,cAAcxC,UAAU,uDAAuDgG,YAAY,YAAYrB,KAAK,MACpIsB,aAAcxF,EAAYoB,OAAQqE,UAAU,MAC5C,0BAAM1D,GAAG,oBAAoBxC,UAAU,iBAE3C,4BAAQ2E,KAAK,SAAS3E,UAAU,8DAA8DQ,EAAM8F,SAAW,YAAc,UCI1HI,MA5Bf,SAAuBlG,GAEnB,IAAMmG,EAAWtG,IAAM+E,YACjBoB,EAAUnG,IAAM+E,YAStB,OACQ,kBAAC,EAAD,CAAepD,KAAM,OAAQ4C,MAAO,YAAa7B,OAAQvC,EAAMuC,OAAQC,QAASxC,EAAMwC,QAAS0B,SARvG,SAAkBa,GACdA,EAAEC,iBACF,IAAMxD,EAAO2E,EAASlB,QAAQC,MACxBhD,EAAO8D,EAAQf,QAAQC,MAC7BlF,EAAMoG,WAAW5E,EAAMU,KAKf,yBAAK1C,UAAU,uCACP,2BAAO4F,IAAKe,EAASnE,GAAG,cAAcxC,UAAU,uDAAuDgG,YAAY,QAAQrB,KAAK,OAAOsB,aAAa,GAAGC,UAAU,IAAIC,UAAU,OAC/K,0BAAM3D,GAAG,oBAAoBxC,UAAU,iBAE3C,yBAAKA,UAAU,uCACX,2BAAO4F,IAAKY,EAAShE,GAAG,aAAaxC,UAAU,sDAAsDgG,YAAY,YAAYrB,KAAK,MAClIsB,aAAa,GAAGC,UAAU,MAC1B,0BAAM1D,GAAG,mBAAmBxC,UAAU,iBAE1D,4BAAQ2E,KAAK,SAAU3E,UAAU,kFAAkFQ,EAAM8F,SAAW,YAAc,YCLvIO,MAlBf,SAA4BrG,GAWxB,OACI,kBAAC,EAAD,CAAewB,KAAM,UAAW4C,MAAO,gBAAiBF,SAV5D,SAAkBa,GACdA,EAAEC,iBAGFhF,EAAMsG,aAAatG,EAAMuG,kBAMmDhE,OAAQvC,EAAMuC,OAAQC,QAASxC,EAAMwC,SAC7G,4BAAQ2B,KAAK,SAAS3E,UAAU,8DAA8DQ,EAAM8F,SAAW,YAAc,SCwM1HU,MA1Mf,WAAgB,IAAD,EAC2BjC,mBAAS,IADpC,mBACJtE,EADI,KACSwG,EADT,OAEkClC,oBAAS,GAF3C,mBAEJmC,EAFI,KAEcC,EAFd,OAGoCpC,oBAAS,GAH7C,mBAGJqC,EAHI,KAGeC,EAHf,OAI4BtC,oBAAS,GAJrC,mBAIJuC,EAJI,KAIWC,EAJX,OAKwCxC,oBAAS,GALjD,mBAKJyC,EALI,KAKiBC,EALjB,OAMmC1C,mBAAS,IAN5C,mBAMJgC,EANI,KAMaW,EANb,OAO6B3C,mBAAS,CAC7CrC,KAAM,GACNV,KAAM,GACNe,QAAQ,IAVD,mBAOJ4E,EAPI,KAOUC,EAPV,OAYwB7C,oBAAS,GAZjC,mBAYJuB,EAZI,KAYMuB,EAZN,OAae9C,mBAAS,IAbxB,mBAaJ3C,EAbI,KAaG0F,EAbH,KAiBX,SAAShC,EAAiBJ,GACtBuB,EAAe,2BAAIxG,GAAL,IAAkBuB,KAAM0D,KAE1C,SAASW,EAAwBX,GAC7BuB,EAAe,2BAAIxG,GAAL,IAAkByB,MAAOwD,KAK3C,SAASC,EAAa3D,EAAMiD,GACxB4C,GAAe,GACf5E,EAAI8E,kBAAkB,CAAC/F,KAAMA,EAAME,MAAO+C,IAAclB,MAAK,WACzDiE,QAEJH,GAAe,GACfR,GAAkB,GAsEtB,SAASW,KACL/E,EAAIgF,cAAclE,MAAK,SAACP,GACpByD,EAAe,CACXjF,KAAMwB,EAAIxB,KACVE,MAAOsB,EAAItB,MACXL,OAAQ2B,EAAI3B,OACZhB,IAAK2C,EAAI3C,SAGhBqH,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAM9B,SAASG,GAAe/C,GACjBA,EAAEQ,SAAWR,EAAEgD,gBACdpB,GAAiB,GACjBE,GAAkB,GAClBE,GAAc,GACdE,GAAoB,GACpBG,EAAgB,CAAClF,KAAM,GAAIV,KAAM,GAAIe,QAAQ,KA+BvD,OAlBEuC,qBAAU,WACN0C,KAEA/E,EAAIuF,cAAczE,MAAK,SAACP,GACpBsE,EAAStE,EAAInB,KAAI,SAACC,GAEd,MAAO,CACHN,KAAMM,EAAKN,KACXU,KAAMJ,EAAKI,KACXC,MAAOL,EAAKK,MACZH,GAAIF,EAAKzB,IACT4B,QAASH,EAAKmG,MAAM5H,YAI/BqH,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,IAGH,kBAAC/H,EAAmBsI,SAApB,CAA6BhD,MAAOjF,GACpC,yBAAKT,UAAU,OACf,yBAAKA,UAAU,QACX,kBAAC,EAAD,MACA,kBAAC,EAAD,CACA2H,aAAcA,EACd5F,sBA5HJ,SAA+BwD,GAC3B4B,GAAiB,IA4HjBlF,uBA3IJ,SAAgCsD,GAC5B8B,GAAkB,IA2IlBlF,mBAhHJ,SAA4BoD,GACxBgC,GAAc,IAgHdlG,gBAhFL,SAAyBqB,EAAMV,GAC1B4F,EAAgB,CAAClF,KAAMA,EAAMV,KAAMA,EAAMe,QAAQ,KAgFjD+E,SAAUA,EACV1F,MAAOA,EACPjB,kBAxFJ,SAA2BC,GACvBsG,EAAmBtG,GACnBqG,GAAoB,IAuFpB7E,eAjFJ,SAAwB7B,EAAWK,GAE/B,IAAMN,EAAUC,EAAUC,MAAK,SAAAC,GAAC,OAAIA,EAAEuB,KAAO/B,EAAY+B,MAEzDS,EAAI0F,qBAAqBvH,GAASN,GAASiD,MAAK,SAAC6E,GAE/C,IAAMC,EAAWzG,EAAMC,KAAI,SAACyG,GAAD,OAAOA,EAAEtG,KAAOpB,EAASwH,EAAUE,KAE9DhB,EAASe,SA6EP,6BAAS7I,UAAS,gBA5ClB2H,EAAa5E,QAAUmE,GAAoBE,GAAqBE,GAAiBE,EA4CzC,wBAA0B,IAAMtG,QAASoH,IAI7E,kBAAC,EAAD,CAAiB7B,eAxI7B,SAAwB/D,GACpBmF,GAAe,GACX5E,EAAI8F,aAAarG,GAAMqB,MAAK,WACxBiE,QAEJH,GAAe,GACfV,GAAiB,IAkIoCpE,OAAQmE,EAAkBlE,QAASsF,GAAgBhC,SAAUA,IAG9G,kBAAC,EAAD,CAAkBX,aAAcA,EAAcG,iBAAkBA,EAAkBO,wBAAyBA,EAC3GtD,OAAQqE,EAAmBpE,QAASsF,GAAgBhC,SAAUA,IAG9D,kBAAC,EAAD,CAAeX,aAAcA,EAAcG,iBAAkBA,EAAkBO,wBAAyBA,EACxGtD,OAAQuE,EAAetE,QAASsF,GAAgB1B,WAlI5D,SAAoB5E,EAAMU,GACtBmF,GAAe,GACf5E,EAAI+F,QAAQ,CAAChH,KAAMA,EAAMU,KAAMA,IAAOqB,MAAK,SAAC6E,GAExCd,EAAS,GAAD,mBAAK1F,GAAL,CAAYwG,QACrB7E,MAAK,WACJ8D,GAAe,GACfN,GAAc,OA2H8DjB,SAAUA,IAGlF,kBAAC,EAAD,CAAoBvD,OAAQyE,EAAqBxE,QAASsF,GAAgBxB,aAxHtF,SAAsB1F,GAClByG,GAAe,GAEf5E,EAAIgG,WAAW7H,GAAQ2C,MAAK,WAE5B,IAAMmF,EAAgB9G,EAAM+G,QAAO,SAAA7G,GAAI,OAAIA,EAAKE,KAAOpB,KAEvD0G,EAASoB,MAETrB,GAAe,GACfJ,GAAoB,IA8G0FV,gBAAiBA,EAAiBT,SAAUA,IAElJ,kBAAC,EAAD,CAAYvD,OAAQ4E,EAAa5E,OAAQC,QAASsF,GAAgBtG,KAAM2F,EAAa3F,KAAMU,KAAMiF,EAAajF,QAKtH,kBAAC,EAAD,UCpMY0G,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjG,MAAK,SAAAkG,GACJA,EAAaC,gBAEdhC,OAAM,SAAAiC,GACL/B,QAAQ+B,MAAMA,EAAMC,a,sCEzI5BC,EAAOC,QAAU,IAA0B,kC,kBCA3CD,EAAOC,QAAU,IAA0B,0C","file":"static/js/main.ca4842fe.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from '../images/logo.svg';\r\n\r\nfunction Header(){\r\n    return(\r\n        <header className=\"header width\">\r\n            <img className=\"logo\" src={logo} alt=\"Around the US Logo\"/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React, {useContext} from 'react';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext.js';\r\n\r\nfunction Card(props) {\r\n\r\n    // define context\r\n    const currentUser = useContext(CurrentUserContext);\r\n    // check if card belongs to user\r\n    const isOwn = props.cardOwnerId === currentUser._id;\r\n\r\n    // Create a variable which you then set in `className` for the like button\r\n    const cardLikeButtonClassName = `element__like-button_active`;\r\n    // Check if the card was liked by the current user\r\n    const isLiked = props.cardLikes.some(i => i._id === currentUser._id);\r\n\r\n    function handleCardClick() { \r\n        props.handleCardClick(props.cardLink, props.cardName);\r\n       \r\n    }\r\n\r\n    function handleLikeClick() {\r\n        props.onCardLike(props.cardLikes, props.cardId);\r\n        \r\n    }\r\n\r\n    function handleDeleteClick() {\r\n        props.handleDeleteClick(props.cardId);\r\n    }\r\n\r\n    return(\r\n        \r\n        <li className=\"element\">\r\n            <button className={`element__delete ${isOwn ? \"element__delete_visible\": \"\"}`} onClick={handleDeleteClick}></button>\r\n            <div className=\"element__image\" onClick={handleCardClick} style={{ backgroundImage: `url(${props.cardLink})`}}>   \r\n            </div>\r\n            <div className=\"element__title-container\">\r\n                <h2 className=\"element__title\">{props.cardName}</h2>\r\n                <div className=\"element__like-container\">\r\n                    <button className={`element__like-button ${isLiked ? cardLikeButtonClassName : \"\"}`} onClick={handleLikeClick}></button>\r\n                    <p className=\"element__like-counter\">{props.cardLikes.length}</p>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Card;","import React, {useContext} from 'react';\r\nimport editPencil from '../images/edit-pencil.svg';\r\nimport Card from './Card.js';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext.js';\r\n\r\n\r\nfunction Main(props) {\r\n\r\n    const currentUser = useContext(CurrentUserContext)\r\n\r\n    return(\r\n        <main className=\"main\">\r\n            <section className=\"profile width\">\r\n                <div className=\"profile__avatar-container\">\r\n                    <img className=\"profile__avatar\" src={currentUser.avatar} alt=\"Your profile\"/>\r\n                    <div className=\"profile__overlay\">\r\n                        <img className=\"profile__overlay-image\" src={editPencil} alt=\"pencil\" onClick={props.handleEditAvatarClick}/>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"profile__name-container\">\r\n                    <h2 className=\"profile__name\">{currentUser.name}</h2>\r\n                    <button className=\"profile__edit-button\" onClick={props.handleEditProfileClick}></button>\r\n                    <p className=\"profile__subtitle\">{currentUser.about}</p>\r\n                </div>\r\n                    \r\n                <button className=\"form__save-button profile__add-button\" onClick={props.handleAddCardClick}></button>\r\n            </section>\r\n            {/* Card Grid section */}\r\n            <section className=\"elements width\">\r\n                <ul className=\"elements__grid-container\">\r\n                    {\r\n                        props.cards.map((card) => {\r\n                            return <Card key={card.id} cardName={card.name} cardId={card.id} cardOwnerId={card.ownerId} cardLink={card.link} cardLikes={card.likes}\r\n                            onCardLike={props.handleCardLike} handleDeleteClick={props.handleDeleteClick} handleCardClick={props.handleCardClick} />\r\n                        })\r\n                    }\r\n\r\n                </ul>\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\n\r\nfunction Footer(){\r\n    return(\r\n        <footer className=\"footer width\">\r\n            <p className=\"footer__copyright\">&copy; 2020 Danny Demosi</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n    return(\r\n        \r\n        <section className={`image-modal ${props.isOpen ? \"image-modal_visible\" : \"\"}`}>\r\n                <div className=\"image-modal__container \">\r\n                    <button className=\"modal__exit image-modal__exit\" onClick={props.onClose}></button>\r\n                    <img className=\"image-modal__image\" src={props.link} alt={props.name}/>\r\n                     <p className=\"image-modal__subtitle\">{props.name}</p>  \r\n                </div>\r\n            </section>\r\n    )\r\n}\r\n\r\nexport default ImagePopup;","import {apiEndpoints} from \"./utils.js\";\r\n\r\nclass Api {\r\n  constructor(endpoint) {\r\n    this._apiEndpoint = endpoint.url;\r\n    this._auth = endpoint.headers;\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    return (res.ok ? res.json() : Promise.reject(`Error: ${res.status}`));\r\n  }\r\n  getUserInfo() {\r\n      return fetch(`${this._apiEndpoint}/users/me`, {\r\n      headers: this._auth\r\n      })\r\n      .then ((res) => {\r\n        return this._checkResponse(res)})\r\n  }\r\n\r\n  getCardList() {\r\n    return fetch(`${this._apiEndpoint}/cards`, {\r\n      headers: this._auth\r\n    })\r\n    .then ( res => this._checkResponse(res))\r\n  }\r\n\r\n  changeProfileInfo(data) {\r\n    return fetch(`${this._apiEndpoint}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._auth,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.about\r\n      })\r\n    })\r\n    .then ( res => this._checkResponse(res))\r\n  }\r\n\r\n  addCard(data) {\r\n    return fetch(`${this._apiEndpoint}/cards`, {\r\n      method: \"POST\",\r\n      headers: this._auth,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        link: data.link\r\n      })\r\n    })\r\n    .then ( res => this._checkResponse(res))\r\n  }\r\n\r\n  deleteCard(cardID) {\r\n    return fetch(`${this._apiEndpoint}/cards/${cardID}`, {\r\n      method: \"DELETE\",\r\n      headers: this._auth\r\n    })\r\n    .then ( res => this._checkResponse(res))\r\n  }\r\n\r\n  changeLikeCardStatus(cardID, likeStatus) {\r\n    if(likeStatus === true) {\r\n      return fetch(`${this._apiEndpoint}/cards/likes/${cardID}`, {\r\n        method: \"PUT\",\r\n        headers: this._auth\r\n      })\r\n      .then ( res => this._checkResponse(res))\r\n    } else {\r\n      return fetch(`${this._apiEndpoint}/cards/likes/${cardID}`, {\r\n        method: \"DELETE\",\r\n        headers: this._auth\r\n      })\r\n      .then ( res => this._checkResponse(res))\r\n    }\r\n  }\r\n\r\n  updateAvatar(url) {\r\n    return fetch(`${this._apiEndpoint}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this._auth,\r\n      body: JSON.stringify({\r\n        avatar: url\r\n      })\r\n    })\r\n    .then ( res => this._checkResponse(res))\r\n  }\r\n}\r\n\r\nconst api = new Api(apiEndpoints);\r\n\r\nexport {api};","// //Global Selectors\r\n// const modal = document.querySelector(\".modal\");\r\n\r\n// // Selectors for image pop up\r\n// const imageModal = document.querySelector('.image-modal');\r\n\r\n// //Selectors for Add modal\r\n// const nameInput = document.querySelector('.form__input_image-title');\r\n// const linkInput = document.querySelector('.form__input_image-link');\r\n// const addCard = document.querySelector('.form_card');\r\n// const addButton = document.querySelector('.profile__add-button');\r\n\r\n// //Selectors for edit modal\r\n// const editProfile = document.querySelector('.form_edit-profile');\r\n// const editButton = document.querySelector('.profile__edit-button');\r\n// const editNameInput = document.querySelector('.form__input_name');\r\n// const editAboutInput = document.querySelector('.form__input_about');\r\n\r\n// //Selectors for Avatar modal\r\n// const avatarUpdateForm = document.querySelector('.form_update-avatar');\r\n// const editAvatar = document.querySelector('.profile__avatar-container');\r\n// const avatarElement = document.querySelector('.profile__avatar');\r\n\r\n// //Selectors for delete modal\r\n// const removeCardID = document.querySelector('.form__card-id');\r\n// //api data\r\nconst apiEndpoints = {\r\n    url: \"https://around.nomoreparties.co/v1/group-3\",\r\n    headers: { \r\n      authorization: \"98dd8ac9-99ea-4ab0-85f9-6d61f9934e14\",\r\n     \"Content-Type\": \"application/json\"\r\n     }\r\n}\r\n\r\nconst myId = \"747ab9509999074a8ccb0d68\"\r\n\r\n//default validation config\r\n\r\n// const defaultConfig = {\r\n//     inputSelector: \".form__input\",\r\n//     submitButtonSelector: \".form__save-button\",\r\n//     inactiveButtonClass: \"form__save-button_disabled\",\r\n//     inputErrorClass: \"form__input-error\",\r\n//     errorClass: \"form__error_visible\"\r\n// };\r\n\r\n// function toggleModal() {\r\n//     modal.classList.toggle('modal_display_visible');\r\n// }\r\n\r\n// function loadingIcon(isLoading, modal) {\r\n//     if (isLoading) {\r\n//      modal.querySelector('.form__save-button').textContent = \"Saving...\";\r\n//     } else {\r\n//      modal.querySelector('.form__save-button').textContent = \"Saved!\";\r\n//     }\r\n//    }\r\n\r\nexport { apiEndpoints, myId};","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n\r\n\r\n\r\n    return(\r\n            <form name={props.name} onSubmit={props.onSubmit} className={`form form_${props.name} ${props.isOpen ? \"form_visible\" : \"\"}`}>\r\n                    <button className={`modal__exit form__exit form__exit_${props.name}`} onClick={props.onClose} type=\"reset\"></button>\r\n                    <p className=\"form__title form-width\">{props.title}</p>\r\n                    {props.children}\r\n                </form>\r\n        )\r\n}\r\n\r\nexport default PopupWithForm;","import React, {useContext, useEffect, useState} from 'react';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditProfilePopup(props) {\r\n\r\n    //context declaration\r\n    const currentUser = useContext(CurrentUserContext);\r\n    //state declarations\r\n    const [name, setName] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    //ref declarations\r\n    const nameRef = React.createRef();\r\n    const aboutRef = React.createRef();\r\n\r\n    useEffect(() => {\r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about)\r\n    }, [currentUser])\r\n\r\n    function onNameChange(e) {\r\n        props.handleNameChange(e.target.value);\r\n    }\r\n\r\n    function onDescriptionChange(e) {\r\n        props.handleDescriptionChange(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        const name = nameRef.current.value;\r\n        const description = aboutRef.current.value;\r\n        //submit to server\r\n        props.onUpdateUser(name, description)\r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about)\r\n    }\r\n\r\n    return(\r\n        <PopupWithForm onSubmit={handleSubmit} name={\"edit-profile\"} title={\"Edit Profile\"} isOpen={props.isOpen} onClose={props.onClose} >\r\n        <div className=\"form__text-field-wrapper form-width\">\r\n                <input ref={nameRef} onChange={onNameChange} id=\"profile-name\" className=\"form__text-field form__input form__input_name\" placeholder=\"Name\" type=\"text\" defaultValue={name} minLength=\"2\" maxLength=\"40\" required />\r\n                <span id=\"profile-name-error\" className=\"form__error\"></span>\r\n            </div>\r\n            <div className=\"form__text-field-wrapper form-width\">\r\n                <input ref={aboutRef} onChange={onDescriptionChange} id=\"profile-about\" className=\"form__text-field form__input form__input_about\" placeholder=\"About me\" type=\"text\" defaultValue={description} minLength=\"2\" maxLength=\"200\" required />\r\n                <span id=\"profile-about-error\" className=\"form__error\"></span>\r\n            </div>\r\n            <button type=\"submit\" className=\"form__save-button form__save-button_profile form-width\">{props.isSaving ? 'Saving...' : 'Save'}</button>\r\n        </PopupWithForm>\r\n        )\r\n}\r\n\r\nexport default EditProfilePopup;","import React, { useContext } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\n\r\nfunction EditAvatarPopup(props) {\r\n\r\n    //context declaration\r\n    const currentUser = useContext(CurrentUserContext);\r\n    //ref declarations\r\n    const linkRef = React.createRef();\r\n\r\n    function onSubmit(e) {\r\n        e.preventDefault();\r\n        const link = linkRef.current.value;\r\n        //submit to server\r\n        props.onUpdateAvatar(link)\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <PopupWithForm name={\"update-avatar\"} title={\"Edit Avatar\"} onSubmit={onSubmit} isOpen={props.isOpen} onClose={props.onClose} >\r\n        <div className=\"form__text-field-wrapper form-width\">\r\n                <input ref={linkRef} id=\"avatar-link\" className=\"form__text-field form__input form__input_avatar-link\" placeholder=\"Image URL\" type=\"url\"\r\n                defaultValue={currentUser.avatar} minLength=\"1\" />\r\n                <span id=\"avatar-link-error\" className=\"form__error\"></span>\r\n            </div>\r\n            <button type=\"submit\" className=\"form__save-button form__save-button_avatar-link form-width\">{props.isSaving ? 'Saving...' : 'Save'}</button>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup(props) {\r\n\r\n    const titleRef = React.createRef();\r\n    const linkRef = React.createRef();\r\n\r\n    function onSubmit(e) {\r\n        e.preventDefault();\r\n        const name = titleRef.current.value;\r\n        const link = linkRef.current.value;\r\n        props.onAddPlace(name, link);\r\n    }\r\n\r\n    return(\r\n            <PopupWithForm name={\"card\"} title={\"New Place\"} isOpen={props.isOpen} onClose={props.onClose} onSubmit={onSubmit}>\r\n                <div className=\"form__text-field-wrapper form-width\">\r\n                        <input ref={titleRef}id=\"image-title\" className=\"form__text-field form__input form__input_image-title\" placeholder=\"Title\" type=\"text\" defaultValue=\"\" minLength=\"1\" maxLength=\"30\" />\r\n                        <span id=\"image-title-error\" className=\"form__error\"></span>\r\n                    </div>\r\n                    <div className=\"form__text-field-wrapper form-width\">\r\n                        <input ref={linkRef} id=\"image-link\" className=\"form__text-field form__input form__input_image-link\" placeholder=\"Image URL\" type=\"url\"\r\n                        defaultValue=\"\" minLength=\"1\" />\r\n                        <span id=\"image-link-error\" className=\"form__error\"></span>\r\n                    </div>\r\n    <button type=\"submit\"  className=\"form__save-button form__save-button_card form-width fomr__save-button_disabled\">{props.isSaving ? 'Saving...' : 'Create'}</button>\r\n            </PopupWithForm>        \r\n    )\r\n}\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction ConfirmDeletePopup(props) {\r\n\r\n    function onSubmit(e) {\r\n        e.preventDefault();\r\n        \r\n        //submit to server\r\n        props.onCardDelete(props.confirmDeleteId);\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <PopupWithForm name={\"confirm\"} title={\"Are you sure?\"} onSubmit={onSubmit} isOpen={props.isOpen} onClose={props.onClose} >\r\n            <button type=\"submit\" className=\"form__save-button form__save-button_avatar-link form-width\">{props.isSaving ? 'Saving...' : 'Yes'}</button>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default ConfirmDeletePopup;","import React, {useState, useEffect} from 'react';\r\nimport '../index.css';\r\n\r\nimport Header from './Header.js';\r\nimport Main from './Main.js';\r\nimport Footer from './Footer.js';\r\nimport ImagePopup from './ImagePopup.js';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext.js';\r\nimport {api} from '../utils/Api.js'\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport ConfirmDeletePopup from './ConfirmDeletePopup';\r\n\r\nfunction App() {\r\n    const [currentUser, setCurrentInfo] = useState(\"\")\r\n    const [editAvatarIsOpen, toggleEditAvatar] = useState(false);\r\n    const [editProfileIsOpen, toggleEditProfile] = useState(false);\r\n    const [addCardIsOpen, toggleAddCard] = useState(false);\r\n    const [confirmDeleteIsOpen, toggleConfirmDelete] = useState(false);\r\n    const [confirmDeleteId, setConfirmDeleteId] = useState(\"\")\r\n    const [selectedCard, setSelectedCard] = useState({\r\n        link: \"\",\r\n        name: \"\",\r\n        isOpen: false\r\n    });\r\n    const [isSaving, toggleSaveText] = useState(false);\r\n    const [cards, setCards] = useState([]);\r\n\r\n\r\n    //functions for Edit Profile\r\n    function handleNameChange(value) {\r\n        setCurrentInfo({...currentUser, name: value});\r\n    }\r\n    function handleDescriptionChange(value) {\r\n        setCurrentInfo({...currentUser, about: value});\r\n    }\r\n    function handleEditProfileClick(e) {\r\n        toggleEditProfile(true);\r\n    }\r\n    function onUpdateUser(name, description) {\r\n        toggleSaveText(true);\r\n        api.changeProfileInfo({name: name, about: description}).then(() => {\r\n            getCurrentUserInfo();\r\n        });\r\n        toggleSaveText(false);\r\n        toggleEditProfile(false);\r\n    }\r\n\r\n\r\n    //functions for Edit Avatar\r\n    function handleEditAvatarClick(e) {\r\n        toggleEditAvatar(true);\r\n    }\r\n    function onUpdateAvatar(link) {\r\n        toggleSaveText(true)\r\n            api.updateAvatar(link).then(() => {\r\n                getCurrentUserInfo();\r\n            });\r\n            toggleSaveText(false)\r\n            toggleEditAvatar(false);\r\n        }\r\n\r\n\r\n    //functions for Add place\r\n    function handleAddCardClick(e) {\r\n        toggleAddCard(true);\r\n    }\r\n    function onAddPlace(name, link) {\r\n        toggleSaveText(true);\r\n        api.addCard({name: name, link: link}).then((newCard) => {\r\n\r\n            setCards([...cards, newCard]);\r\n        }).then(() => {\r\n            toggleSaveText(false);\r\n            toggleAddCard(false);\r\n        })\r\n    }\r\n\r\n\r\n    //functions for Cards\r\n    function onCardDelete(cardId) {\r\n        toggleSaveText(true);\r\n        //delete card from server\r\n        api.deleteCard(cardId).then(() => {\r\n        //filter cards on page and remove the card with matching id from the array\r\n        const filteredCards = cards.filter(card => card.id !== cardId)\r\n        //set new card array state\r\n        setCards(filteredCards);\r\n        });\r\n        toggleSaveText(false);\r\n        toggleConfirmDelete(false);\r\n        }\r\n    function handleDeleteClick(cardId) {\r\n        setConfirmDeleteId(cardId);\r\n        toggleConfirmDelete(true);\r\n\r\n        }\r\n   function handleCardClick(link, name) {\r\n        setSelectedCard({link: link, name: name, isOpen: true});\r\n        }\r\n    function handleCardLike(cardLikes, cardId) {\r\n        // Check one more time if this card was already liked\r\n        const isLiked = cardLikes.some(i => i.id === currentUser.id);\r\n        // Send a request to the API and getting the updated card data\r\n        api.changeLikeCardStatus(cardId, !isLiked).then((newCard) => {\r\n            // Create a new array based on the existing one and putting a new card into it\r\n          const newCards = cards.map((c) => c.id === cardId ? newCard : c);\r\n          // Update the state\r\n          setCards(newCards);\r\n        });\r\n    }\r\n\r\n\r\n    //function to assign context data\r\n\r\n    function getCurrentUserInfo() {\r\n        api.getUserInfo().then((res) => {\r\n            setCurrentInfo({\r\n                name: res.name,\r\n                about: res.about,\r\n                avatar: res.avatar,\r\n                _id: res._id\r\n            });\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    //global functions\r\n\r\n    function closeAllPopups(e) {\r\n        if(e.target === e.currentTarget) {\r\n            toggleEditAvatar(false);\r\n            toggleEditProfile(false);\r\n            toggleAddCard(false);\r\n            toggleConfirmDelete(false);\r\n            setSelectedCard({link: \"\", name: \"\", isOpen: false})\r\n        }\r\n    }\r\n\r\n    function isOpen() {\r\n        if (selectedCard.isOpen || editAvatarIsOpen || editProfileIsOpen || addCardIsOpen || confirmDeleteIsOpen) {\r\n            return true;\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    //API request for User Info\r\n    useEffect(() => {\r\n        getCurrentUserInfo();\r\n\r\n        api.getCardList().then((res) => {\r\n            setCards(res.map((card) => {\r\n                \r\n                return {\r\n                    name: card.name,\r\n                    link: card.link,\r\n                    likes: card.likes,\r\n                    id: card._id,\r\n                    ownerId: card.owner._id\r\n                }\r\n            }))\r\n        })\r\n        .catch(err => console.log(err))\r\n    }, [])\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n    <div className=\"App\">\r\n    <div className=\"page\">\r\n        <Header/>\r\n        <Main\r\n        selectedCard={selectedCard}\r\n        handleEditAvatarClick={handleEditAvatarClick}\r\n        handleEditProfileClick={handleEditProfileClick}\r\n        handleAddCardClick={handleAddCardClick}\r\n        handleCardClick={handleCardClick}\r\n        setCards={setCards}\r\n        cards={cards}\r\n        handleDeleteClick={handleDeleteClick}\r\n        handleCardLike={handleCardLike}\r\n        />\r\n        \r\n            {/* Popup forms */}\r\n            <section className={`modal ${isOpen() ? \"modal_display_visible\" : \"\"}`} onClick={closeAllPopups}>\r\n                \r\n                {/* Update Avatar form */}\r\n\r\n                <EditAvatarPopup onUpdateAvatar={onUpdateAvatar} isOpen={editAvatarIsOpen} onClose={closeAllPopups} isSaving={isSaving}/>\r\n\r\n                {/* Edit profile form */}\r\n                <EditProfilePopup onUpdateUser={onUpdateUser} handleNameChange={handleNameChange} handleDescriptionChange={handleDescriptionChange} \r\n                isOpen={editProfileIsOpen} onClose={closeAllPopups} isSaving={isSaving} />\r\n\r\n                {/* Add Card form */}\r\n                <AddPlacePopup onUpdateUser={onUpdateUser} handleNameChange={handleNameChange} handleDescriptionChange={handleDescriptionChange} \r\n                isOpen={addCardIsOpen} onClose={closeAllPopups} onAddPlace={onAddPlace} isSaving={isSaving}/>\r\n                \r\n                {/* Confirm delete popup */}\r\n                <ConfirmDeletePopup isOpen={confirmDeleteIsOpen} onClose={closeAllPopups} onCardDelete={onCardDelete} confirmDeleteId={confirmDeleteId} isSaving={isSaving}/>\r\n                {/* Update Popup form */}\r\n                <ImagePopup isOpen={selectedCard.isOpen} onClose={closeAllPopups} name={selectedCard.name} link={selectedCard.link} />\r\n            </section>\r\n\r\n            \r\n        \r\n        <Footer/>\r\n        \r\n    </div>\r\n    </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.8f7611ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit-pencil.d476a8b8.svg\";"],"sourceRoot":""}